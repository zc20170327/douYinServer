<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhdtedu.system.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.zhdtedu.system.dao.entity.User">
    <result column="USER_ID_" jdbcType="INTEGER" property="userId" />
    <result column="USER_NAME_" jdbcType="VARCHAR" property="userName" />
    <result column="PHONE_" jdbcType="VARCHAR" property="phone" />
    <result column="USER_STATUS_" jdbcType="INTEGER" property="userStatus" />
    <result column="SIGN_UP_TIME_" jdbcType="TIMESTAMP" property="signUpTime" />
    <result column="INTEGRAL_" jdbcType="INTEGER" property="integral" />
    <result column="WeChat_NickName_" jdbcType="VARCHAR" property="wechatNickName" />
    <result column="PASSWORD_" jdbcType="VARCHAR" property="password" />
    <!-- 再配置 任务 集合 -->
    <collection property="tasks" ofType="com.zhdtedu.system.dao.entity.Task">
      <result column="TASK_ID_"  property="id" />
      <result column="TASK_TYPE_"  property="taskType" />
      <result column="ORDER_TIME_"  property="orderTime" />
      <result column="SCHEDULE_"  property="schedule" />
      <result column="ORDER_AMOUNT_"  property="orderAmount" />
      <result column="ORDER_PERSON_" property="orderPerson" />
      <result column="COMPLETE_ORDER_TIME_"  property="completeOrderTime" />
      <result column="LINK_"  property="link" />
      <result column="QUANTITY_"  property="quantity" />
      <result column="DESCRIPTION_"  property="description" />
      <result column="TASK_CATEGORY_"  property="taskCategory" />
      <result column="TASK_INTEGER_"  property="integral" />
    </collection>
  </resultMap>
  <delete id="deleteById" parameterType="com.zhdtedu.system.dao.entity.User">
    delete from sys_user
    where USER_ID_ = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhdtedu.system.dao.entity.User">
    insert into sys_user (USER_ID_, USER_NAME_, PHONE_,
      USER_STATUS_, SIGN_UP_TIME_, INTEGRAL_,
      WeChat_NickName_, PASSWORD_)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{userStatus,jdbcType=INTEGER}, #{signUpTime,jdbcType=TIMESTAMP}, #{integral,jdbcType=INTEGER},
      #{wechatNickName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})
  </insert>
  <!-- 获得总记录数 -->

  <select id="getTotalCount" resultType="int"   >
    select count(*) from  sys_user
    where 1=1
    <!-- <if test="name != null">
      and NAME_=#{name}
    </if>
    <if test="start_time != null">
      and TIME_ &gt; #{start_time}
    </if>
    <if test="end_time != null">
      and TIME_ &lt;#{end_time}
    </if> -->
  </select>
  <!--根据名称和开始时间，结束时间获取监测点列表 " -->
  <select id="getLists" resultMap="BaseResultMap"   >
    select USER_ID_, USER_NAME_, PHONE_,
    USER_STATUS_, SIGN_UP_TIME_, INTEGRAL_,
    WeChat_NickName_, PASSWORD_  from sys_user
   <!-- <if test="name != null"></if>-->
    <!--
    <if test="name != null">
      and NAME_=#{name}
    </if>
    <if test="start_time != null">
      and TIME_ &gt; #{start_time}
    </if>
    <if test="end_time != null">
      and TIME_ &lt;#{end_time}
    </if> -->
    limit ${(pageIndex-1)*pageSize},${pageSize}
  </select>
  <update id="updateById" parameterType="map">
    update sys_user
    set USER_ID_ = #{userId,jdbcType=INTEGER},
      USER_NAME_ = #{userName,jdbcType=VARCHAR},
      PHONE_ = #{phone,jdbcType=VARCHAR},
      USER_STATUS_ = #{userStatus,jdbcType=INTEGER},
      SIGN_UP_TIME_ = #{signUpTime,jdbcType=TIMESTAMP},
      INTEGRAL_ = #{integral,jdbcType=INTEGER},
      WeChat_NickName_ = #{wechatNickName,jdbcType=VARCHAR},
      PASSWORD_ = #{password,jdbcType=VARCHAR}
    where USER_ID_ = #{userId,jdbcType=INTEGER}
</update>
  <select id="login" resultMap="BaseResultMap">
    select USER_ID_,USER_NAME_,PHONE_,USER_STATUS_,SIGN_UP_TIME_,INTEGRAL_,WeChat_NickName_ from sys_user
    where USER_NAME_=#{userName,jdbcType=VARCHAR}
    and  PASSWORD_ = #{password,jdbcType=VARCHAR}
  </select>
  <select id="get" parameterType="com.zhdtedu.system.dao.entity.User" resultType="int">
    select count(*) from sys_user
    where  1=1
    <if test="userName != null">
      and  USER_NAME_ = #{userName,jdbcType=VARCHAR}
    </if>
     <if test="phone != null">
       and PHONE_ = #{phone,jdbcType=VARCHAR}
     </if>

  </select>
  <select id="userTasks" parameterType="com.zhdtedu.system.dao.entity.User" resultMap="BaseResultMap">
    select sys_user.USER_ID_, sys_user.USER_NAME_, sys_user.PHONE_, sys_user.USER_STATUS_, sys_user.SIGN_UP_TIME_, sys_user.INTEGRAL_, sys_user.WeChat_NickName_,
    sys_user.PASSWORD_  ,sys_task.ID_ as  TASK_ID_ ,sys_task.TASK_TYPE_, sys_task.ORDER_TIME_, sys_task.SCHEDULE_, sys_task.ORDER_AMOUNT_, sys_task.ORDER_PERSON_,
    sys_task.COMPLETE_ORDER_TIME_ ,sys_task.LINK_,sys_task.QUANTITY_,sys_task.DESCRIPTION_,sys_task.TASK_CATEGORY_,sys_task.INTEGRAL_ as TASK_INTEGER_  from sys_user,sys_task,sys_user_task
    where sys_user.USER_ID_=sys_user_task.USER_ID_ and sys_user_task.TASK_ID_=sys_task.ID_
    and  1=1
    <if test=" userId != null">
    and  sys_user.USER_ID_=#{userId,jdbcType=INTEGER}
    </if>
  </select>
  <select id="getUser" parameterType="com.zhdtedu.system.dao.entity.User" resultMap="BaseResultMap">
    select USER_ID_,USER_NAME_,PHONE_,USER_STATUS_,SIGN_UP_TIME_,INTEGRAL_,WeChat_NickName_,PASSWORD_ from sys_user
    where  1=1
    <if test=" userId != null">
      and  USER_ID_ = #{userId,jdbcType=VARCHAR}
    </if>
  </select>
</mapper>
